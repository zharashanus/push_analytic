#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API /api/v1/test/random
"""

import requests
import json

# –ë–∞–∑–æ–≤—ã–π URL API
BASE_URL = "http://localhost:7778"

def test_random_client():
    """–¢–µ—Å—Ç –∞–Ω–∞–ª–∏–∑–∞ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞...")
    
    try:
        response = requests.get(f"{BASE_URL}/api/v1/test/random")
        print(f"Status: {response.status_code}")
        print(f"Response: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"\nüîç –ê–Ω–∞–ª–∏–∑ –æ—Ç–≤–µ—Ç–∞:")
            print(f"  - client_code: {data.get('client_code')} (—Ç–∏–ø: {type(data.get('client_code'))})")
            print(f"  - recommendations: {data.get('recommendations')} (—Ç–∏–ø: {type(data.get('recommendations'))})")
            
            if data.get('recommendations') is not None:
                print(f"  - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: {len(data.get('recommendations', []))}")
                if data.get('recommendations'):
                    print(f"  - –ü–µ—Ä–≤–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {data.get('recommendations')[0]}")
        
        return response.status_code == 200
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ API /api/v1/test/random...")
    print(f"Base URL: {BASE_URL}")
    
    result = test_random_client()
    
    print(f"\n{'='*50}")
    print("–†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ê")
    print('='*50)
    
    status = "‚úÖ –ü–†–û–ô–î–ï–ù" if result else "‚ùå –ü–†–û–í–ê–õ–ï–ù"
    print(f"Test Random Client: {status}")

if __name__ == "__main__":
    main()
