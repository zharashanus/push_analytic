"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Å–µ—Ä–≤–µ—Ä–∞
"""

import sys
import os
import time
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(os.path.dirname(os.path.dirname(__file__)))

def health_check():
    """–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã"""
    
    print("üè• –ü–†–û–í–ï–†–ö–ê –ó–î–û–†–û–í–¨–Ø –°–ò–°–¢–ï–ú–´")
    print("=" * 40)
    print(f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()
    
    checks = []
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
    print("1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    try:
        from database import db_manager
        conn = db_manager.get_connection()
        if conn and not conn.closed:
            checks.append(("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö", True, "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ"))
        else:
            checks.append(("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö", False, "‚ùå –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"))
    except Exception as e:
        checks.append(("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö", False, f"‚ùå –û—à–∏–±–∫–∞: {e}"))
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
    print("2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥—É–ª–µ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...")
    try:
        sys.path.append(os.path.join(os.path.dirname(os.path.dirname(__file__)), 'src'))
        from analytics.transaction_analyzer import TransactionAnalyzer
        from analytics.transfer_analyzer import TransferAnalyzer
        from analytics.pattern_detector import PatternDetector
        checks.append(("–ú–æ–¥—É–ª–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏", True, "‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã"))
    except Exception as e:
        checks.append(("–ú–æ–¥—É–ª–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏", False, f"‚ùå –û—à–∏–±–∫–∞: {e}"))
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Ç–∏–ª–∏—Ç
    print("3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Ç–∏–ª–∏—Ç...")
    try:
        from utils.date_utils import DateUtils
        from utils.math_utils import MathUtils
        checks.append(("–£—Ç–∏–ª–∏—Ç—ã", True, "‚úÖ –£—Ç–∏–ª–∏—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã"))
    except Exception as e:
        checks.append(("–£—Ç–∏–ª–∏—Ç—ã", False, f"‚ùå –û—à–∏–±–∫–∞: {e}"))
    
    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω—ã–º
    print("4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω—ã–º...")
    try:
        clients = db_manager.get_clients(limit=1)
        if clients:
            checks.append(("–î–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º", True, f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(clients)} –∫–ª–∏–µ–Ω—Ç–æ–≤"))
        else:
            checks.append(("–î–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º", False, "‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"))
    except Exception as e:
        checks.append(("–î–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º", False, f"‚ùå –û—à–∏–±–∫–∞: {e}"))
    
    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print()
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò")
    print("-" * 40)
    
    all_passed = True
    for name, status, message in checks:
        print(f"{message}")
        if not status:
            all_passed = False
    
    print()
    if all_passed:
        print("üéâ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!")
        return True
    else:
        print("‚ö†Ô∏è  –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´!")
        return False


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    success = health_check()
    
    if success:
        print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        sys.exit(0)
    else:
        print("‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –≤—ã—è–≤–∏–ª–∞ –ø—Ä–æ–±–ª–µ–º—ã")
        sys.exit(1)


if __name__ == '__main__':
    main()
